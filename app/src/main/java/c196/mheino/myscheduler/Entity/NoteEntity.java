package c196.mheino.myscheduler.Entity;

import androidx.room.Entity;
import androidx.room.ForeignKey;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;
import static androidx.room.ForeignKey.CASCADE;

/** This class will model data for the notes. This class will be
 *  used to model the data that will compose the database table that will hold
 *  data about the notes. The primary key will be autogenerated by the
 *  database.
 *
 * @author  Matthew Heino
 */
@Entity(tableName = "note_table", foreignKeys = @ForeignKey(entity=CourseEntity.class
        ,parentColumns = "courseId", childColumns = "courseID", onDelete = CASCADE))
public class NoteEntity {

    @PrimaryKey(autoGenerate = true)
    private int noteId;
    private int courseID;                               // Foreign key.

    private String noteTitle;
    private String noteBodyText;

    /** This class will model data for the Notes. This class will be used to
     *  model the data that will compose the database table that will hold data
     *  about the notes. The primary key will be autogenerated by the
     *  database. Room Constructor....
     *
     * @param noteTitle
     * @param noteBodyText
     * @param courseID
     *
     * @author  Matthew Heino
     *
     */
    public NoteEntity(String noteTitle, String noteBodyText, int courseID) {
        this.noteTitle = noteTitle;
        this.noteBodyText = noteBodyText;
        this.courseID = courseID;
    }

    /**Construct that will be used to test the app without using a Room
     *  database. This method is used to to test the different views without
     *  the use of a Room database.  This method includes the Course ID that was
     *  omitted in the constructor for the Room version of the constructor.
     *  Used for testing
     *
     * @param noteId
     * @param noteTitle
     * @param noteBodyText
     * @param courseID
     *
     */
    @Ignore
    public NoteEntity(int noteId, String noteTitle, String noteBodyText, int courseID) {
        this.noteId = noteId;
        this.noteTitle = noteTitle;
        this.noteBodyText = noteBodyText;
        this.courseID = courseID;
    }

    /** Method to get the Note's ID.
     *
     * @return
     *
     */
    public int getNoteId() { return noteId; }

    /** Method to set the note's ID.
     *
     * @param noteId
     *
     */
    public void setNoteId(int noteId) { this.noteId = noteId; }

    /** Method to get the note's title
     *
     * @return
     *
     */
    public String getNoteTitle() { return noteTitle; }

    /** Method to set the note's title,
     *
     * @param noteTitle
     *
     */
    public void setNoteTitle(String noteTitle) { this.noteTitle = noteTitle; }

    /** Method to get the body of the notes text.
     *
     * @return
     *
     */
    public String getNoteBodyText() { return noteBodyText; }

    /** Method to set the text body of the note.
     *
     * @param noteBodyText
     */
    public void setNoteBodyText(String noteBodyText) { this.noteBodyText = noteBodyText; }

    /** Method to get the course ID that is associated with the note
     *
     * @return
     *
     */
    public int getCourseID() { return this.courseID; }

    /** Method to set the course ID that is associated with the note.
     *
     * @param courseID
     */
    public void setCourseID(int courseID) { this.courseID = courseID; }

    /** Tostring method that will print the information of the note.
     *
     * @return
     */
    @Override
    public String toString() {
        return "NoteEntity{" +
                "noteId=" + noteId +
                ", noteTitle='" + noteTitle + '\'' +
                ", noteBodyText='" + noteBodyText + '\'' +
                ", courseID=" + courseID +
                '}';
    }

} // end class
